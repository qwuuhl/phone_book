# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, END, Label, Listbox, \
    ALL

from app.db import get_all_records, delete_record, create_new_record

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"D:\dev\phone_book\app\assets\frames")
sort_order = 0

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def filter_rows():
    fetch_data_to_list_box(False)
    return True


window = Tk()

window.geometry("750x450")
window.configure(bg="#FFFFFF")

canvas = Canvas(
    window,
    bg="#FFFFFF",
    height=450,
    width=750,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)
canvas.create_rectangle(
    0.0,
    0.0,
    750.0,
    76.0,
    fill="#2454FF",
    outline="")

canvas.create_text(
    28.0,
    13.0,
    anchor="nw",
    text="Телефонний додаток",
    fill="#FFFFFF",
    font=("Inter Black", 32 * -1)
)

canvas.create_text(
    28.0,
    92.0,
    anchor="nw",
    text="Додати контакт",
    fill="#000000",
    font=("Inter Black", 20 * -1)
)

canvas.create_text(
    28.0,
    142.0,
    anchor="nw",
    text="Ім’я",
    fill="#000000",
    font=("Inter Black", 16 * -1)
)

canvas.create_text(
    28.0,
    241.0,
    anchor="nw",
    text="Номер",
    fill="#000000",
    font=("Inter Black", 16 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    171.0,
    197.0,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=44.0,
    y=169.0,
    width=254.0,
    height=54.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    538.0,
    230.5,
    image=entry_image_2
)
list_box = Listbox(
    window,
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
list_box.place(
    x=411.0,
    y=147.0,
    width=254.0,
    height=165.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    169.0,
    296.0,
    image=entry_image_3
)
entry_3 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=42.0,
    y=268.0,
    width=254.0,
    height=54.0
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    539.3986511230469,
    127.93442630767822,
    image=entry_image_4
)
entry_4 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0,
    validatecommand=filter_rows,
    validate="all",
)
entry_4.place(
    x=408.9344263076782,
    y=114.0,
    width=260.9284496307373,
    height=25.868852615356445
)

canvas.create_text(
    395.0,
    92.0,
    anchor="nw",
    text="Пошук",
    fill="#000000",
    font=("Inter Black", 16 * -1)
)


def delete_selected_rows():
    for i in list_box.curselection():
        row = list_box.get(i)
        values_list = row.split(':')
        name = values_list[0]
        phone = values_list[1].split('\n')[0].split(' ')[1]
        delete_record(name, phone)
    fetch_data_to_list_box()


def save_row_to_db():
    name = entry_1.get()
    phone = entry_3.get()
    if not name:
        pass
    if not phone:
        pass
    else:
        entry_1.delete(0, END)
        entry_3.delete(0, END)
        create_new_record(name, phone)

    fetch_data_to_list_box()


def fetch_data_to_list_box(all=True):
    contacts = get_all_records()
    filter_value = entry_4.get()
    if not all and filter_value:
        filtered_contacts = [contact for contact in contacts if
                             filter_value.lower() in contact[1].lower() or
                             filter_value in contact[2]]
    else:
        filtered_contacts = contacts

    list_box.delete(0, END)
    for i, contact in enumerate(filtered_contacts):
        list_box.insert(i, f"{contact[1]}: {contact[2]}\n")


def sort_listbox():
    global sort_order
    items = list(list_box.get(0, END))

    if sort_order == 0:
        items.sort()
    elif sort_order == 1:
        items.sort(reverse=True)
    elif sort_order == 2:
        items.sort(key=lambda row: int(row.split(":")[1]))
    elif sort_order == 3:
        items.sort(key=lambda row: int(row.split(":")[1]), reverse=True)

    list_box.delete(0, END)
    for item in items:
        list_box.insert(END, item)

    sort_order = (sort_order + 1) % 4



button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=save_row_to_db,
    relief="flat"
)
button_1.place(
    x=28.0,
    y=359.0,
    width=286.0,
    height=56.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=delete_selected_rows,
    relief="flat"
)
button_2.place(
    x=395.0,
    y=330.0,
    width=286.0,
    height=34.375
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=sort_listbox,
    relief="flat"
)
button_3.place(
    x=393.0,
    y=381.0,
    width=286.0,
    height=34.375
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    704.0,
    38.0,
    image=image_image_1
)
